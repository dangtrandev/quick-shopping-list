{"ast":null,"code":"var _jsxFileName = \"/Users/danghoanghuytran/Documents/GitHub/quick-shopping-list/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addToList = () => {\n      let input = document.getElementById(\"inputField\").value;\n      let updatedList = this.state.list + \"\\n\" + input;\n      this.setState({\n        list: updatedList\n      });\n      //reset the input box to an empty string after submit\n      document.getElementById(\"inputField\").value = \"\";\n    };\n    this.state = {\n      list: \"\"\n    }; //set the list to empty string\n  }\n\n  //declare the componentDidMount to set the value of list\n  //to \"apples when page just loads\n\n  componentDidMount() {\n    this.setState({\n      list: \"apples\"\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.state.list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Item name....\",\n          id: \"inputField\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add to List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Remove from List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Reset List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n}\nReactDOM.render( /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"names":["React","ReactDOM","List","Component","constructor","props","addToList","input","document","getElementById","value","updatedList","state","list","setState","componentDidMount","render"],"sources":["/Users/danghoanghuytran/Documents/GitHub/quick-shopping-list/src/index.js"],"sourcesContent":["import React from \"react\"; \nimport ReactDOM from \"react-dom\"; \nimport \"./index.css\"\n\nexport default class List extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = { list: \"\"}; //set the list to empty string\n\n    }\n\n    //declare the componentDidMount to set the value of list\n    //to \"apples when page just loads\n    \n    componentDidMount() {\n        this.setState({\n            list: \"apples\", \n        })\n    }\n\n    addToList = () => {\n        let input = document.getElementById(\"inputField\").value;\n        let updatedList = this.state.list + \"\\n\" + input; \n        this.setState({list: updatedList})\n        //reset the input box to an empty string after submit\n        document.getElementById(\"inputField\").value = \"\"; \n    }\n\n    render() {\n        return(\n            <div id=\"counter\">\n                <h3>{this.state.list}</h3>\n                <div className=\"controls\">\n                    <input type=\"text\" placeholder=\"Item name....\" id=\"inputField\"/>\n                    <button>Add to List</button>\n                    <button>Remove from List</button>\n                    <button>Reset List</button>\n                </div>\n            </div>\n        ); \n    }\n}\n\nReactDOM.render(<List />, document.getElementById(\"root\"));  "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AAAA;AAEpB,eAAe,MAAMC,IAAI,SAASF,KAAK,CAACG,SAAS;EAC7CC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAcjBC,SAAS,GAAG,MAAM;MACd,IAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK;MACvD,IAAIC,WAAW,GAAG,IAAI,CAACC,KAAK,CAACC,IAAI,GAAG,IAAI,GAAGN,KAAK;MAChD,IAAI,CAACO,QAAQ,CAAC;QAACD,IAAI,EAAEF;MAAW,CAAC,CAAC;MAClC;MACAH,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK,GAAG,EAAE;IACpD,CAAC;IAnBG,IAAI,CAACE,KAAK,GAAG;MAAEC,IAAI,EAAE;IAAE,CAAC,CAAC,CAAC;EAE9B;;EAEA;EACA;;EAEAE,iBAAiB,GAAG;IAChB,IAAI,CAACD,QAAQ,CAAC;MACVD,IAAI,EAAE;IACV,CAAC,CAAC;EACN;EAUAG,MAAM,GAAG;IACL,oBACI;MAAK,EAAE,EAAC,SAAS;MAAA,wBACb;QAAA,UAAK,IAAI,CAACJ,KAAK,CAACC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM,eAC1B;QAAK,SAAS,EAAC,UAAU;QAAA,wBACrB;UAAO,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,eAAe;UAAC,EAAE,EAAC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAE,eAChE;UAAA,UAAQ;QAAW;UAAA;UAAA;UAAA;QAAA,QAAS,eAC5B;UAAA,UAAQ;QAAgB;UAAA;UAAA;UAAA;QAAA,QAAS,eACjC;UAAA,UAAQ;QAAU;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACzB;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAEd;AACJ;AAEAZ,QAAQ,CAACe,MAAM,eAAC,QAAC,IAAI;EAAA;EAAA;EAAA;AAAA,QAAG,EAAER,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}